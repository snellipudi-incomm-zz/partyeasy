#server.port=9099

logging.level.org.springframework: info
logging.level.com.hazelcast: info

logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg %X %n
logging.pattern.file=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg %X %n
logging.path=./log
#logging.file=PartyEasy

#hazelcast.networkAddress[0]=192.168.5.124:5701
hazelcast.networkAddress[0]=172.31.85.4:5701
hazelcast.groupName=dev
hazelcast.groupPassword=dev-pass
hazelcast.eviction-size=2000
hazelcast.nearcache-name=VMSNEARCACHE
hazelcast.nearcache-idletimeout=300
hazelcast.nearcache-timetolive=300

spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://partyeasy.cyoosgwtttev.us-east-1.rds.amazonaws.com:3306/party_easy?nullNamePatternMatchesAll=true&useLegacyDatetimeCode=false&serverTimezone=America/New_York&nullNamePatternMatchesAll=true
spring.datasource.username=partyeasy
spring.datasource.password=letsgopartyeasy
spring.datasource.schema=classpath:/org/springframework/batch/core/schema-mysql.sql
spring.datasource.initialize=false


#remove this after development
spring.jpa.hibernate.ddl-auto=create
#spring.batch.initialize-schema=always


spring.jpa.show-sql=true

# Define a custom port instead of the default 8080
server.port=8443

# Tell Spring Security (if used) to require requests over HTTPS
security.require-ssl=true

# The format used for the keystore
server.ssl.key-store-type=JKS
# The path to the keystore containing the certificate
server.ssl.key-store=file:/var/opt/partyeasy/trust/keystore.jks
# The password used to generate the certificate
server.ssl.key-store-password=partyeasy
# The alias mapped to the certificate
server.ssl.key-alias=tomcat

